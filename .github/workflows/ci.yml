name: CI
on:
  push:
    branches:
      - master
    paths:
      - "**.py"
      - "**.txt"
      - ".github/workflows/ci.yml"
      - "**.toml"
      - "tox.ini"
  pull_request:
    branches:
      - master
    paths:
      - "**.py"
      - "**.txt"
      - ".github/workflows/ci.yml"
      - "**.toml"
      - "tox.ini"

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test on Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          cache: "pip"
      - run: pip install tox tox-gh-actions
      - run: tox

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - name: Build distribution packages
        run: |
          pip install flit
          flit build
      - name: Upload distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-test:
    name: Publish to TestPyPI
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/django-mjml-template
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish:
    name: >-
      Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/django-mjml-template
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
